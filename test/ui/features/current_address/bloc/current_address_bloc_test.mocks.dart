// Mocks generated by Mockito 5.4.6 from annotations
// in dishlocal/test/ui/features/current_address/bloc/current_address_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dishlocal/data/categories/address/failure/address_failure.dart'
    as _i5;
import 'package:dishlocal/data/categories/address/model/address.dart' as _i6;
import 'package:dishlocal/data/categories/address/repository/interface/address_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AddressRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressRepository extends _i1.Mock implements _i3.AddressRepository {
  MockAddressRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AddressFailure, _i6.Address>> getCurrentAddress() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentAddress,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AddressFailure, _i6.Address>>.value(
                _FakeEither_0<_i5.AddressFailure, _i6.Address>(
          this,
          Invocation.method(
            #getCurrentAddress,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AddressFailure, _i6.Address>>);
}

/// A class which mocks [Address].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddress extends _i1.Mock implements _i6.Address {
  MockAddress() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get latitude => (super.noSuchMethod(
        Invocation.getter(#latitude),
        returnValue: 0.0,
      ) as double);

  @override
  double get longitude => (super.noSuchMethod(
        Invocation.getter(#longitude),
        returnValue: 0.0,
      ) as double);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
